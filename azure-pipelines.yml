# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'dockerhub'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'run --rm app sh -c "python manage.py wait_for_db && python manage.py test && flake8"'
- task: CopyFiles@2
  inputs:
    SourceFolder: 'deploy_terraform'
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)/deploy_terraform'
- task: CopyFiles@2
  inputs:
    SourceFolder: 'scripts'
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)/scripts'
- task: CopyFiles@2
  inputs:
    SourceFolder: '.'
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)/app'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    
